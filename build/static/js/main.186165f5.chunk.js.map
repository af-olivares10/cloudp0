{"version":3,"sources":["Login.jsx","NewEventModal.jsx","EditEventModal.jsx","Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","e","setState","loading","loginError","preventDefault","data","mail","refs","username","value","password","wildCard","state","signUp","fetch","concat","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","json","responseJson","success","localStorage","setItem","token","setLogged","window","alert","message","catch","error","console","switch","prevState","react_default","a","createElement","className","id","src","alt","style","width","left","transform","position","onSubmit","type","ref","required","pattern","onClick","Component","Option","Select","App","handleSubmit","form","validateFieldsAndScroll","err","values","name","category","place","address","start_date","startDate","end_date","endDate","virt","virtual","USER_ID","getItem","closeNewEventModal","location","reload","handleCategoryChange","v","startDateChange","date","dateString","endDateChange","virutalChange","target","checked","events","newEventModalVisible","virutal","getFieldDecorator","modal","title","visible","footer","es_form","Item","label","rules","input","es_select","defaultValue","onChange","date_picker","es_checkbox","es_button","htmlType","WrappedHorizontalLoginForm","Form","create","currentEvent","closeEditEventModal","EditEventModal_Option","edit","editEventModalVisible","remove","renderEvents","length","map","i","card","bordered","key","margin","color","textAlign","signOut","removeItem","_this2","result","_this3","NewEventModal","EditEventModal","logged","x-access-token","Home","src_Login_0","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wQAqIeA,4BAhIb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,MAAQ,SAACC,GACPR,EAAKS,SAAS,CAAEC,SAAS,EAAMC,WAAY,KAC3CH,EAAEI,iBACF,IAAIC,EAAO,CAAEC,KAAMd,EAAKe,KAAKC,SAASC,MAAOC,SAAUlB,EAAKe,KAAKG,SAASD,OACpEE,EAAWnB,EAAKoB,MAAMC,OAAS,OAAS,eAC9CC,MAAK,UAAAC,OAAWJ,GAAY,CAE1BK,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUjB,KACpBkB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLlC,EAAKS,SAAS,CAAEC,SAAS,IACpBwB,EAAaC,QAGZnC,EAAKoB,MAAMC,OACbC,MAAK,sBAAwB,CAE3BE,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUjB,KACpBkB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLlC,EAAKS,SAAS,CAAEC,SAAS,IACpBwB,EAAaC,SAGhBC,aAAaC,QAAQ,aAAcH,EAAaI,OAChDF,aAAaC,QAAQ,OAAQrC,EAAKe,KAAKC,SAASC,OAChDjB,EAAKD,MAAMwC,WAAU,GACrBC,OAAOC,MAAM,iCALbzC,EAAKS,SAAS,CAAEE,WAAYuB,EAAaQ,YAS5CC,MAAM,SAACC,GACNC,QAAQD,MAAMA,MAGlBR,aAAaC,QAAQ,aAAcH,EAAaI,OAChDF,aAAaC,QAAQ,OAAQrC,EAAKe,KAAKC,SAASC,OAChDjB,EAAKD,MAAMwC,WAAU,IA9BvBvC,EAAKS,SAAS,CAAEE,WAAYuB,EAAaQ,YAmC5CC,MAAM,SAACC,GACNC,QAAQD,MAAMA,MA9DD5C,EAiEnB8C,OAAS,WACP9C,EAAKS,SAAS,SAAAsC,GACZ,MAAO,CAAE1B,QAAS0B,EAAU1B,WAjE9BrB,EAAKoB,MAAQ,CACXT,WAAY,GACZD,SAAS,EACTW,QAAQ,GALOrB,wEAuEjB,OACEgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,iBAClCJ,EAAAC,EAAAC,cAAA,OAAKG,IAAI,YAAYC,IAAI,QAAQC,MAAO,CAAEC,MAAO,QAASC,KAAM,MAAOC,UAAW,mBAAoBC,SAAU,eAElHX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBS,SAAUzD,KAAKI,OAC7CyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,QAAQT,GAAG,YAAYD,UAAU,QAAQW,IAAI,WAAWC,UAAQ,EAACC,QAAQ,aAEvFhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWT,GAAG,gBAAgBD,UAAU,QAAQW,IAAI,WAAWC,UAAQ,EAACC,QAAQ,aAE3F7D,KAAKiB,MAAMV,QAsBVsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAvBnBH,EAAAC,EAAAC,cAAA,WACK/C,KAAKiB,MAAMC,OASV2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMU,KAAK,UAA7B,YAEFb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBc,QAAS9D,KAAK2C,QAA/C,yBAZJE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMU,KAAK,UAA7B,UAEFb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBc,QAAS9D,KAAK2C,QAA/C,8BAqBRE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAgBhD,KAAKiB,MAAMT,wBArHxCuD,sFCDZC,EAAWC,IAAXD,OAEFE,cACF,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACfrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KAcVuE,aAAe,SAAA9D,GACXR,EAAKS,SAAS,CAAEC,SAAS,IACzBF,EAAEI,iBACFZ,EAAKD,MAAMwE,KAAKC,wBAAwB,SAACC,EAAKC,GAC1C,IAAKD,EAAK,CACN,IAAI5D,EAAO,CACP8D,KAAMD,EAAOC,KACbC,SAAU5E,EAAKoB,MAAMwD,SACrBC,MAAOH,EAAOG,MACdC,QAASJ,EAAOI,QAChBC,WAAY/E,EAAKoB,MAAM4D,UACvBC,SAAUjF,EAAKoB,MAAM8D,QACrBC,KAAMnF,EAAKoB,MAAMgE,QAAU,EAAI,EAC/BC,QAASjD,aAAakD,QAAQ,SAElChE,MAAK,WAAa,CAEdE,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUjB,KACtBkB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC1BF,KAAK,SAACG,GACHlC,EAAKS,SAAS,CAAEC,SAAS,IACzB8B,OAAOC,MAAMP,EAAaQ,SACtBR,EAAaC,UACbnC,EAAKD,MAAMwF,qBACX/C,OAAOgD,SAASC,gBA5CrBzF,EAoDnB0F,qBAAuB,SAACC,GACpB3F,EAAKS,SAAS,CAAEmE,SAAUe,KArDX3F,EAuDnB4F,gBAAkB,SAACC,EAAMC,GACrB9F,EAAKS,SAAS,CAAEuE,UAAWc,KAxDZ9F,EA0DnB+F,cAAgB,SAACF,EAAMC,GACnB9F,EAAKS,SAAS,CAAEyE,QAASY,KA3DV9F,EA6DnBgG,cAAgB,SAACxF,GACbR,EAAKS,SAAS,CAAE2E,QAAS5E,EAAEyF,OAAOC,WA5DlClG,EAAKoB,MAAQ,CACT+E,OAAQ,GACRC,sBAAsB,EACtBxB,SAAU,aACVI,UAAW,GACXE,QAAS,GACTmB,SAAS,EACT3F,SAAS,GATEV,wEAiEV,IACGsG,EAAsBnG,KAAKJ,MAAMwE,KAAjC+B,kBAER,OACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIC,MAAM,YACNC,QAAStG,KAAKJ,MAAM0G,QACpBC,OAAQ,IAIJvG,KAAKiB,MAAMV,QACPsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAGfH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAM/C,SAAUzD,KAAKmE,cACjBtB,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,QACZP,EAAkB,OAAQ,CACvBQ,MAAO,CACH,GAEA,CACI/C,UAAU,EACVrB,QAAS,0BANpB4D,CASEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,YACb7D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,aAAa,aAAa1D,MAAO,CAAEC,MAAO,KAAO0D,SAAU/G,KAAKuF,sBACpE1C,EAAAC,EAAAC,cAACiB,EAAD,CAAQlD,MAAM,cAAd,cACA+B,EAAAC,EAAAC,cAACiB,EAAD,CAAQlD,MAAM,WAAd,WACA+B,EAAAC,EAAAC,cAACiB,EAAD,CAAQlD,MAAM,YAAd,YACA+B,EAAAC,EAAAC,cAACiB,EAAD,CAAQlD,MAAM,UAAd,YAGR+B,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,SACZP,EAAkB,QAAS,CACxBQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,2BAJpB4D,CAOEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,WACZP,EAAkB,UAAW,CAC1BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,8BAJpB4D,CAOEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,cACZP,EAAkB,YAAa,CAC5BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,gCAJpB4D,CAOEtD,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYD,SAAU/G,KAAKyF,oBAElC5C,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,YACZP,EAAkB,UAAW,CAC1BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,+BAJpB4D,CAOEtD,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYD,SAAU/G,KAAK4F,kBAElC/C,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,kBACZP,EAAkB,QAAS,GAA3BA,CACEtD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAUF,SAAU/G,KAAK6F,kBAEhChD,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,KACI5D,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQxD,KAAK,UAAUyD,SAAS,UAAhC,sBArJlBpD,aAmKHqD,EAFoBC,IAAKC,OAAO,CAAE9C,KAAM,oBAApB6C,CAA0CnD,GCnKrEF,EAAWC,IAAXD,OAEFE,cACF,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACfrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KAaVuE,aAAe,SAAA9D,GACXR,EAAKS,SAAS,CAAEC,SAAS,IACzBF,EAAEI,iBACFZ,EAAKD,MAAMwE,KAAKC,wBAAwB,SAACC,EAAKC,GAC1C,IAAKD,EAAK,CACN,IAAI5D,EAAO,CACP8D,KAAMD,EAAOC,KACbC,SAAU5E,EAAKoB,MAAMwD,SACrBC,MAAOH,EAAOG,MACdC,QAASJ,EAAOI,QAChBC,WAAY/E,EAAKoB,MAAM4D,UACvBC,SAAUjF,EAAKoB,MAAM8D,QACrBC,KAAMnF,EAAKoB,MAAMgE,QAAU,EAAI,EAC/BC,QAASjD,aAAakD,QAAQ,SAElChE,MAAK,eAAAC,OAAgBvB,EAAKD,MAAM2H,cAAgB,CAE5ClG,OAAQ,MACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUjB,KACtBkB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC1BF,KAAK,SAACG,GACHlC,EAAKS,SAAS,CAAEC,SAAS,IACzB8B,OAAOC,MAAMP,EAAaQ,SACtBR,EAAaC,UACbnC,EAAKD,MAAM4H,sBACXnF,OAAOgD,SAASC,gBA3CrBzF,EAmDnB0F,qBAAuB,SAACC,GACpB3F,EAAKS,SAAS,CAAEmE,SAAUe,KApDX3F,EAsDnB4F,gBAAkB,SAACC,EAAMC,GACrB9F,EAAKS,SAAS,CAAEuE,UAAWc,KAvDZ9F,EAyDnB+F,cAAgB,SAACF,EAAMC,GACnB9F,EAAKS,SAAS,CAAEyE,QAASY,KA1DV9F,EA4DnBgG,cAAgB,SAACxF,GACbR,EAAKS,SAAS,CAAE2E,QAAS5E,EAAEyF,OAAOC,WA3DlClG,EAAKoB,MAAQ,CACT+E,OAAQ,GACRvB,SAAU,aACVI,UAAW,GACXE,QAAS,GACTmB,SAAS,EACT3F,SAAS,GAREV,wEAgEV,IACGsG,EAAsBnG,KAAKJ,MAAMwE,KAAjC+B,kBAER,OACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIC,MAAM,aACNC,QAAStG,KAAKJ,MAAM0G,QACpBC,OAAQ,IAIJvG,KAAKiB,MAAMV,QACPsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAGfH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAM/C,SAAUzD,KAAKmE,cACjBtB,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,QACZP,EAAkB,OAAQ,CACvBQ,MAAO,CACH,GAEA,CACI/C,UAAU,EACVrB,QAAS,0BANpB4D,CASEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,YACb7D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,aAAa,aAAa1D,MAAO,CAAEC,MAAO,KAAO0D,SAAU/G,KAAKuF,sBACpE1C,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ3G,MAAM,cAAd,cACA+B,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ3G,MAAM,WAAd,WACA+B,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ3G,MAAM,YAAd,YACA+B,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ3G,MAAM,UAAd,YAGR+B,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,SACZP,EAAkB,QAAS,CACxBQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,2BAJpB4D,CAOEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,WACZP,EAAkB,UAAW,CAC1BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,8BAJpB4D,CAOEtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,QAEP/D,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,cACZP,EAAkB,YAAa,CAC5BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,gCAJpB4D,CAOEtD,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYD,SAAU/G,KAAKyF,oBAElC5C,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,YACZP,EAAkB,UAAW,CAC1BQ,MAAO,CACH,CACI/C,UAAU,EACVrB,QAAS,+BAJpB4D,CAOEtD,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYD,SAAU/G,KAAK4F,kBAElC/C,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,CAAWC,MAAM,kBACZP,EAAkB,QAAS,GAA3BA,CACEtD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAUF,SAAU/G,KAAK6F,kBAEhChD,EAAAC,EAAAC,cAACyD,EAAA,EAAKC,KAAN,KACI5D,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQxD,KAAK,UAAUyD,SAAS,UAAhC,kBApJlBpD,aAkKHqD,EAFoBC,IAAKC,OAAO,CAAE9C,KAAM,oBAApB6C,CAA0CnD,GC5C9DA,cAjHb,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACjBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KAyBR8H,KAAO,SAACrH,GACNR,EAAKS,SAAS,CAAEqH,uBAAuB,EAAMJ,aAAclH,EAAE4C,MA3B5CpD,EA8BnB+H,OAAS,SAACvH,GACRc,MAAK,eAAAC,OAAgBf,EAAE4C,IAAM,CAE3B5B,OAAQ,SACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBAEjBI,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACLM,OAAOC,MAAMP,EAAaQ,SACtBR,EAAaC,SACfK,OAAOgD,SAASC,YA1CLzF,EAiDnBgI,aAAe,WACb,OAAIhI,EAAKoB,MAAM+E,OAAO8B,OACbjI,EAAKoB,MAAM+E,OAAO+B,IAAI,SAAC1H,EAAG2H,GAAJ,OAC3BnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAM5B,MAAOhG,EAAEmE,KAAM0D,UAAU,EAAOC,IAAKH,EAAG5E,MAAO,CAAEgF,OAAQ,YAAa/E,MAAO,QACjFR,EAAAC,EAAAC,cAAA,wBACa1C,EAAEoE,UAEf5B,EAAAC,EAAAC,cAAA,qBACU1C,EAAEqE,OAEZ7B,EAAAC,EAAAC,cAAA,uBACY1C,EAAEsE,SAGd9B,EAAAC,EAAAC,cAAA,0BACe1C,EAAEuE,YAGjB/B,EAAAC,EAAAC,cAAA,wBAEa1C,EAAEyE,UAEfjC,EAAAC,EAAAC,cAAA,8BAEmB1C,EAAE2E,KAAKtE,KAAK,GAAK,MAAQ,MAE5CmC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQxD,KAAK,UAAUV,UAAU,mBAAmBc,QAAS,kBAAMjE,EAAK6H,KAAKrH,KAA7E,SAEFwC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQxD,KAAK,UAAUV,UAAU,mBAAmBc,QAAS,kBAAMjE,EAAK+H,OAAOvH,KAA/E,cAOAwC,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEiF,MAAO,QAASC,UAAW,WAAzC,4BAxFSzI,EA4FnB0I,QAAU,WACRtG,aAAauG,WAAW,cACxBnG,OAAOgD,SAASC,UA5FhBzF,EAAKoB,MAAQ,CACX+E,OAAQ,GACRC,sBAAsB,EACtB0B,uBAAuB,EACvBJ,aAAc,GANC1H,mFASC,IAAA4I,EAAAzI,KAElBmB,MAAK,oBAAAC,OAAqBa,aAAakD,QAAQ,SAAW,CAExD9D,OAAQ,MACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBAEjBI,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACL0G,EAAKnI,SAAS,CAAE0F,OAAQjE,EAAa2G,4CA4ElC,IAAAC,EAAA3I,KACP,OACE6C,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWc,QAAS9D,KAAKuI,SAAxC,YACA1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,aACAH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQxD,KAAK,UAAUV,UAAU,mBAAmBc,QAAS,kBAAM6E,EAAKrI,SAAS,CAAE2F,sBAAsB,MAAzG,aAEEjG,KAAK6H,eAEPhF,EAAAC,EAAAC,cAAC6F,EAAD,CAAetC,QAAStG,KAAKiB,MAAMgF,qBAAsBb,mBAAoB,WAAQuD,EAAKrI,SAAS,CAAE2F,sBAAsB,OAC3HpD,EAAAC,EAAAC,cAAC8F,EAAD,CAAgBtB,aAAcvH,KAAKiB,MAAMsG,aAAcjB,QAAStG,KAAKiB,MAAM0G,sBAAuBH,oBAAqB,WAAQmB,EAAKrI,SAAS,CAAEqH,uBAAuB,eA5G5J5D,aCkCHG,sBAjCb,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACjBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KAKRwC,UAAY,SAAC0G,GACXjJ,EAAKS,SAAS,CAACwI,YALfjJ,EAAKoB,MAAQ,CACX6H,QAAS,GAHMjJ,mFASA,IAAA4I,EAAAzI,KACjBmB,MAAM,oBAAoB,CACxBE,OAAQ,MACRC,QAAS,CACPyH,iBAAiB9G,aAAakD,QAAQ,cACtC5D,OAAU,mBACVC,eAAgB,sBAEjBI,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SAAQF,KAAK,SAAAE,GACpCA,EAAKE,QACNyG,EAAKnI,SAAS,CAACwI,QAAO,IAGtBL,EAAKnI,SAAS,CAACwI,QAAO,MAEvBtG,MAAM,SAAA8B,GAAG,OAAE5B,QAAQD,MAAM6B,sCAG5B,OACEtE,KAAKiB,MAAM6H,OAAQjG,EAAAC,EAAAC,cAACiG,EAAD,CAAM5G,UAAapC,KAAKoC,YAAeS,EAAAC,EAAAC,cAACkG,EAAD,CAAO7G,UAAapC,KAAKoC,mBA7BvE2B,cCKEmF,QACW,cAA7B7G,OAAOgD,SAAS8D,UAEe,UAA7B9G,OAAOgD,SAAS8D,UAEhB9G,OAAOgD,SAAS8D,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhI,KAAK,SAAAiI,GACjCA,EAAaC","file":"static/js/main.186165f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginError: \"\",\r\n      loading: false,\r\n      signUp: false,\r\n    };\r\n  }\r\n\r\n  login = (e) => {\r\n    this.setState({ loading: true, loginError: \"\" });\r\n    e.preventDefault();\r\n    let data = { mail: this.refs.username.value, password: this.refs.password.value };\r\n    const wildCard = this.state.signUp ? \"user\" : \"authenticate\";\r\n    fetch(`/users/${wildCard}`, {\r\n\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({ loading: false });\r\n        if (!responseJson.success)\r\n          this.setState({ loginError: responseJson.message });\r\n        else {\r\n          if (this.state.signUp) {\r\n            fetch(`/users/authenticate`, {\r\n\r\n              method: 'POST',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(data)\r\n            }).then((response) => response.json())\r\n              .then((responseJson) => {\r\n                this.setState({ loading: false });\r\n                if (!responseJson.success)\r\n                  this.setState({ loginError: responseJson.message });\r\n                else {\r\n                  localStorage.setItem(\"CloudToken\", responseJson.token);\r\n                  localStorage.setItem(\"mail\", this.refs.username.value);\r\n                  this.props.setLogged(true);\r\n                  window.alert(\"User registered succesfully!\")\r\n                }\r\n\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              });\r\n          } else {\r\n            localStorage.setItem(\"CloudToken\", responseJson.token);\r\n            localStorage.setItem(\"mail\", this.refs.username.value);\r\n            this.props.setLogged(true);\r\n          }\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  switch = () => {\r\n    this.setState(prevState => {\r\n      return { signUp: !prevState.signUp }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container \">\r\n          <div className=\"profile profile--open\">\r\n            <div className=\"profile__avatar\" id=\"toggleProfile\">\r\n              <img src=\"cloud.png\" alt=\"Cloud\" style={{ width: \"100px\", left: \"50%\", transform: \"translateX(-50%)\", position: \"absolute\" }} />\r\n            </div>\r\n            <form className=\"profile__form\" onSubmit={this.login}>\r\n              <div className=\"profile__fields\">\r\n                <div className=\"field\">\r\n                  <label >Email</label>\r\n                  <input type=\"email\" id=\"fieldUser\" className=\"input\" ref=\"username\" required pattern=\".*\\S.*\" />\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label >Password</label>\r\n                  <input type=\"password\" id=\"fieldPassword\" className=\"input\" ref=\"password\" required pattern=\".*\\S.*\" />\r\n                </div>\r\n                {(!this.state.loading) ? (\r\n                  <div>\r\n                    {(!this.state.signUp) ? (\r\n                      <div >\r\n                        <div className=\"profile__footer\">\r\n                          <button className=\"btn\" type=\"submit\">Login</button>\r\n                        </div>\r\n                        <label className=\"switch-letter\" onClick={this.switch} >Not registered? Sign up!</label>\r\n                      </div>\r\n                    ) :\r\n                      (\r\n                        <div className=\"profile__footer\">\r\n                          <div className=\"profile__footer\">\r\n                            <button className=\"btn\" type=\"submit\">Sign up</button>\r\n                          </div>\r\n                          <label className=\"switch-letter\" onClick={this.switch} >Registered? Sign in!</label>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  </div>\r\n                ) :\r\n                  (\r\n                    <div className=\"spinner\">\r\n                      <div className=\"double-bounce1\"></div>\r\n                      <div className=\"double-bounce2\"></div>\r\n                    </div>\r\n                  )\r\n                }\r\n                <label className=\"login-error\" >{this.state.loginError}</label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Modal, Form, Input, Select, DatePicker, Checkbox, Button } from 'antd';\r\nconst { Option } = Select;\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            newEventModalVisible: false,\r\n            category: \"Conference\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            virutal: false,\r\n            loading: false,\r\n\r\n        };\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        this.setState({ loading: true })\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                let data = {\r\n                    name: values.name,\r\n                    category: this.state.category,\r\n                    place: values.place,\r\n                    address: values.address,\r\n                    start_date: this.state.startDate,\r\n                    end_date: this.state.endDate,\r\n                    virt: this.state.virtual ? 1 : 0,\r\n                    USER_ID: localStorage.getItem(\"mail\"),\r\n                }\r\n                fetch(`/events/`, {\r\n\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((response) => response.json())\r\n                    .then((responseJson) => {\r\n                        this.setState({ loading: false, })\r\n                        window.alert(responseJson.message)\r\n                        if (responseJson.success) {\r\n                            this.props.closeNewEventModal();\r\n                            window.location.reload()\r\n                        }\r\n\r\n                    })\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCategoryChange = (v) => {\r\n        this.setState({ category: v })\r\n    }\r\n    startDateChange = (date, dateString) => {\r\n        this.setState({ startDate: dateString })\r\n    }\r\n    endDateChange = (date, dateString) => {\r\n        this.setState({ endDate: dateString })\r\n    }\r\n    virutalChange = (e) => {\r\n        this.setState({ virtual: e.target.checked })\r\n\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Modal\r\n                title=\"New Event\"\r\n                visible={this.props.visible}\r\n                footer={[\r\n                ]}\r\n            >\r\n                {\r\n                    this.state.loading ? (\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\"></div>\r\n                            <div className=\"double-bounce2\"></div>\r\n                        </div>\r\n                    ) : (\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Item label=\"Name\">\r\n                                    {getFieldDecorator('name', {\r\n                                        rules: [\r\n                                            {\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a name!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Category\">\r\n                                    <Select defaultValue=\"Conference\" style={{ width: 120 }} onChange={this.handleCategoryChange}>\r\n                                        <Option value=\"Conference\">Conference</Option>\r\n                                        <Option value=\"Seminar\">Seminar</Option>\r\n                                        <Option value=\"Congress\">Congress</Option>\r\n                                        <Option value=\"Course\">Course</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Place\">\r\n                                    {getFieldDecorator('place', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a place!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Address\">\r\n                                    {getFieldDecorator('address', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input an address!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Start date\">\r\n                                    {getFieldDecorator('startDate', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a start date!',\r\n                                            },\r\n                                        ],\r\n                                    })(<DatePicker onChange={this.startDateChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"End date\">\r\n                                    {getFieldDecorator('endDate', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input an end date!',\r\n                                            },\r\n                                        ],\r\n                                    })(<DatePicker onChange={this.endDateChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Is it virtual?\">\r\n                                    {getFieldDecorator('email', {\r\n                                    })(<Checkbox onChange={this.virutalChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item >\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        Register\r\n                            </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        )\r\n                }\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(App);\r\n\r\nexport default WrappedHorizontalLoginForm;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Modal, Form, Input, Select, DatePicker, Checkbox, Button } from 'antd';\r\nconst { Option } = Select;\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            category: \"Conference\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            virutal: false,\r\n            loading: false,\r\n\r\n        };\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        this.setState({ loading: true })\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                let data = {\r\n                    name: values.name,\r\n                    category: this.state.category,\r\n                    place: values.place,\r\n                    address: values.address,\r\n                    start_date: this.state.startDate,\r\n                    end_date: this.state.endDate,\r\n                    virt: this.state.virtual ? 1 : 0,\r\n                    USER_ID: localStorage.getItem(\"mail\"),\r\n                }\r\n                fetch(`/events/?id=${this.props.currentEvent}`, {\r\n\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }).then((response) => response.json())\r\n                    .then((responseJson) => {\r\n                        this.setState({ loading: false, })\r\n                        window.alert(responseJson.message)\r\n                        if (responseJson.success) {\r\n                            this.props.closeEditEventModal();\r\n                            window.location.reload()\r\n                        }\r\n\r\n                    })\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCategoryChange = (v) => {\r\n        this.setState({ category: v })\r\n    }\r\n    startDateChange = (date, dateString) => {\r\n        this.setState({ startDate: dateString })\r\n    }\r\n    endDateChange = (date, dateString) => {\r\n        this.setState({ endDate: dateString })\r\n    }\r\n    virutalChange = (e) => {\r\n        this.setState({ virtual: e.target.checked })\r\n\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Modal\r\n                title=\"Edit Event\"\r\n                visible={this.props.visible}\r\n                footer={[\r\n                ]}\r\n            >\r\n                {\r\n                    this.state.loading ? (\r\n                        <div className=\"spinner\">\r\n                            <div className=\"double-bounce1\"></div>\r\n                            <div className=\"double-bounce2\"></div>\r\n                        </div>\r\n                    ) : (\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Item label=\"Name\">\r\n                                    {getFieldDecorator('name', {\r\n                                        rules: [\r\n                                            {\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a name!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Category\">\r\n                                    <Select defaultValue=\"Conference\" style={{ width: 120 }} onChange={this.handleCategoryChange}>\r\n                                        <Option value=\"Conference\">Conference</Option>\r\n                                        <Option value=\"Seminar\">Seminar</Option>\r\n                                        <Option value=\"Congress\">Congress</Option>\r\n                                        <Option value=\"Course\">Course</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Place\">\r\n                                    {getFieldDecorator('place', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a place!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Address\">\r\n                                    {getFieldDecorator('address', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input an address!',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Start date\">\r\n                                    {getFieldDecorator('startDate', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input a start date!',\r\n                                            },\r\n                                        ],\r\n                                    })(<DatePicker onChange={this.startDateChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"End date\">\r\n                                    {getFieldDecorator('endDate', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input an end date!',\r\n                                            },\r\n                                        ],\r\n                                    })(<DatePicker onChange={this.endDateChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Is it virtual?\">\r\n                                    {getFieldDecorator('email', {\r\n                                    })(<Checkbox onChange={this.virutalChange} />)}\r\n                                </Form.Item>\r\n                                <Form.Item >\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        Edit\r\n                            </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        )\r\n                }\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(App);\r\n\r\nexport default WrappedHorizontalLoginForm;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Card, Col, Row } from 'antd';\r\nimport { Button } from 'antd';\r\nimport NewEventModal from './NewEventModal';\r\nimport EditEventModal from './EditEventModal';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: [],\r\n      newEventModalVisible: false,\r\n      editEventModalVisible: false,\r\n      currentEvent: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n\r\n    fetch(`/events/?USER_ID=${localStorage.getItem(\"mail\")}`, {\r\n\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({ events: responseJson.result })\r\n\r\n      })\r\n\r\n  }\r\n\r\n  edit = (e) => {\r\n    this.setState({ editEventModalVisible: true, currentEvent: e.id })\r\n  }\r\n\r\n  remove = (e) => {\r\n    fetch(`/events/?id=${e.id}`, {\r\n\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then((response) => response.json())\r\n      .then((responseJson) => {\r\n        window.alert(responseJson.message)\r\n        if (responseJson.success) {\r\n          window.location.reload()\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n\r\n  renderEvents = () => {\r\n    if (this.state.events.length) {\r\n      return this.state.events.map((e, i) =>\r\n        <Card title={e.name} bordered={false} key={i} style={{ margin: \"20px auto\", width: \"30%\" }}>\r\n          <div>\r\n            Category: {e.category}\r\n          </div>\r\n          <div>\r\n            Place: {e.place}\r\n          </div>\r\n          <div>\r\n            Address: {e.address}\r\n\r\n          </div>\r\n          <div>\r\n            Start date: {e.start_date}\r\n\r\n          </div>\r\n          <div>\r\n\r\n            End date: {e.end_date}\r\n          </div>\r\n          <div>\r\n\r\n            Is it virtual?: {e.virt.data[0] ? \"Yes\" : \"No\"}\r\n          </div>\r\n          <div>\r\n\r\n            <Button type=\"primary\" className=\"new-event-button\" onClick={() => this.edit(e)}>Edit</Button>\r\n          </div>\r\n          <div>\r\n\r\n            <Button type=\"primary\" className=\"new-event-button\" onClick={() => this.remove(e)}>Delete</Button>\r\n          </div>\r\n\r\n\r\n        </Card>\r\n      )\r\n    }\r\n    return (<div style={{ color: \"white\", textAlign: \"center\" }}>\r\n      You have no events yet.\r\n    </div>)\r\n  }\r\n  signOut = () => {\r\n    localStorage.removeItem(\"CloudToken\");\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <div >\r\n\r\n        <div className=\"sign-out\" onClick={this.signOut}>Sign Out</div>\r\n        <div className=\"main-title\">My events</div>\r\n        <Button type=\"primary\" className=\"new-event-button\" onClick={() => this.setState({ newEventModalVisible: true })}>New event</Button>\r\n        {\r\n          this.renderEvents()\r\n        }\r\n        <NewEventModal visible={this.state.newEventModalVisible} closeNewEventModal={() => { this.setState({ newEventModalVisible: false }) }} />\r\n        <EditEventModal currentEvent={this.state.currentEvent} visible={this.state.editEventModalVisible} closeEditEventModal={() => { this.setState({ editEventModalVisible: false }) }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Home from './Home';\nimport 'antd/dist/antd.css';\nimport './Login.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged : false\n    };\n  }\n  setLogged = (logged)=>{\n    this.setState({logged});\n  }\n  componentDidMount(){\n    fetch(\"/users/checkToken\",{\n      method: 'GET',\n      headers: {\n        'x-access-token':localStorage.getItem(\"CloudToken\"),\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response=> response.json()).then(json=>{\n      if(json.success){\n        this.setState({logged:true});\n      }\n      else{\n        this.setState({logged:false});\n      }\n    }).catch(err=>console.error(err));\n  }\n  render() {\n    return (\n      this.state.logged?(<Home setLogged = {this.setLogged}/>):(<Login setLogged = {this.setLogged}/>)\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}